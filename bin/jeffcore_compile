#!/bin/bash

unset output_dir

# Parse inputs
while getopts 'aeo:' OPTION; do
  case "$OPTION" in
    a)
      echo "Keeping assembly scripts" && export assembly_keep=1
      ;;
    e)
      echo "Executing directly" && export execute=1
      ;;
    o)
      output_dir="$OPTARG"
      echo "Outputing to dir $OPTARG"
      ;;
    ?)
      echo "script usage: $(basename \$0) [-a] [-e] [-o somevalue]" >&2
      exit 1
      ;;
  esac
done
# Remove all args passed by getopts 
shift "$(($OPTIND -1))"

# Take final arg as input_file
input_file=$1


if [[ -z $output_dir ]]
then
    # Use directory for input_file for output if nothing else specified
    echo "No ouput directory specified. Defaulting"
    output_dir="$(dirname "${input_file}")/"
else
    echo "using specified output directory"
    # Add final slash to dir path if not present
    if [[ "${output_dir: -1}" != "/" ]] 
    then
        output_dir+="/"
    fi
fi
echo $output_dir

# Run compiler
jeffcore_comp $input_file -o $output_dir


OIFS=$IFS

base_file_name="$(basename "${input_file}")"

IFS='.' read -ra file_name_split <<< "$base_file_name"
file_name=${file_name_split[0]}

IFS=$OIFS

asm_file="$output_dir$file_name.asm"
obj_file="$output_dir$file_name.obj"
exe_file="$output_dir$file_name"

nasm -f elf64 $asm_file -o $obj_file
ld $obj_file -o $exe_file

chmod +x $exe_file


if [[ -z $assembly_keep ]]
then
    rm $asm_file
    rm $obj_file
fi

if [[ $execute = 1 ]]
then
    ./$exe_file
fi